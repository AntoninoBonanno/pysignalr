[tool]
[tool.poetry]
name = "pysignalr"
version = "0.1.2"
description = "Modern, reliable and async-ready client for SignalR protocol"
keywords = ["signalr", "asp", "client", "asyncio", "json", "messagepack", "websockets"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Typing :: Typed",
]
homepage = "https://github.com/baking-bad/pysignalr"
authors = [
    "Lev Gorodetskiy <github@droserasprout.space>",
    "mandrewcito <anbaalo@gmail.com>",
]
maintainers = [
    "Lev Gorodetskiy <github@droserasprout.space>",
]
readme = "README.md"

packages = [
    { include = "pysignalr", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
websockets = "^10.3"
aiohttp = "^3.7.4"
msgpack = "^1.0.2"

[tool.poetry.dev-dependencies]
black = "*"
diff-cover = "*"
flake8-comprehensions = "*"
flake8-bugbear = "*"
flakeheaven = "*"
isort = "*"
mypy = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"

[tool.isort]
line_length = 120
force_single_line = true

[tool.black]
line-length = 120
target-version = ["py38"]
skip-string-normalization = true

[tool.flakeheaven]
max_line_length = 120

[tool.flakeheaven.plugins]
"*" = ["+*"]
pycodestyle = ["-*"]

[tool.mypy]
python_version = "3.8"
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "ruamel"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise FrameworkError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
